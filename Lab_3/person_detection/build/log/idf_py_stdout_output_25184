Command: ninja flash
[1/11] Performing build step for 'bootloader'
[1/1] cd /home/rodo1/esp/projects_tf/person_detection/build/bootloader/esp-idf/esptool_py && /home/rodo1/esp/idf-tools/python_env/idf5.5_py3.12_env/bin/python /home/rodo1/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/rodo1/esp/projects_tf/person_detection/build/bootloader/bootloader.bin
Bootloader binary size 0x6cd0 bytes. 0x330 bytes (3%) free.
[2/11] No install step for 'bootloader'
[3/11] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/main.cc.obj
[4/11] Completed 'bootloader'
[5/11] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/main_functions.cc.obj
[6/11] Linking C static library esp-idf/main/libmain.a
[7/11] Generating ld/sections.ld
[8/11] Linking CXX executable person_detection.elf
[9/11] Generating binary image from built executable
esptool.py v4.9.dev6
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/rodo1/esp/projects_tf/person_detection/build/person_detection.bin
[10/11] cd /home/rodo1/esp/projects_tf/person_detection/build/esp-idf/esptool_py && /home/rodo1/esp/idf-tools/python_env/idf5.5_py3.12_env/bin/python /home/rodo1/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/rodo1/esp/projects_tf/person_detection/build/partition_table/partition-table.bin /home/rodo1/esp/projects_tf/person_detection/build/person_detection.bin
person_detection.bin binary size 0x5bdc0 bytes. Smallest app partition is 0x180000 bytes. 0x124240 bytes (76%) free.
[10/11] cd /home/rodo1/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/rodo1/esp/esp-idf -D "SERIAL_TOOL=/home/rodo1/esp/idf-tools/python_env/idf5.5_py3.12_env/bin/python;;/home/rodo1/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/rodo1/esp/projects_tf/person_detection/build -P /home/rodo1/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 person_detection.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.9.dev6
Serial port /dev/ttyUSB0
Connecting....
Chip is ESP32-D0WDQ6 (revision v1.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: ec:64:c9:ac:c1:10
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0006bfff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 27856 bytes to 17500...
Writing at 0x00001000... (50 %)
Writing at 0x00007714... (100 %)
Wrote 27856 bytes (17500 compressed) at 0x00001000 in 0.5 seconds (effective 407.7 kbit/s)...
Hash of data verified.
Compressed 376256 bytes to 225118...
Writing at 0x00010000... (7 %)
Writing at 0x0001d396... (14 %)
Writing at 0x00024a8f... (21 %)
Writing at 0x0002c621... (28 %)
Writing at 0x00032457... (35 %)
Writing at 0x0003770b... (42 %)
Writing at 0x0003d06f... (50 %)
Writing at 0x00042140... (57 %)
Writing at 0x000473bf... (64 %)
Writing at 0x0004d8b7... (71 %)
Writing at 0x00053c8e... (78 %)
Writing at 0x0005a79e... (85 %)
Writing at 0x00061c77... (92 %)
Writing at 0x00067826... (100 %)
Wrote 376256 bytes (225118 compressed) at 0x00010000 in 5.3 seconds (effective 571.8 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 105...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (105 compressed) at 0x00008000 in 0.0 seconds (effective 1052.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
